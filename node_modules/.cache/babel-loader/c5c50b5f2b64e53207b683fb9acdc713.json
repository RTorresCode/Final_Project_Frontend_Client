{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = event.target;\n      type === \"checkbox\" ? this.setState({\n        [name]: checked\n      }) : this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let new_info = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        gpa: this.state.gpa,\n        email: this.state.email,\n        imageUrl: this.state.imageUrl,\n        campusId: this.state.campusId,\n        id: this.state.id\n      };\n\n      if (new_info.imageUrl === \"\") {}\n\n      try {\n        let student = await this.props.editStudent(new_info);\n        console.log(student.id);\n        alert(`${new_info.firstname} ${new_info.lastname}'s edit was saved.`);\n        this.setState({\n          firstname: \"\",\n          lastname: \"\",\n          gpa: -1,\n          email: \"\",\n          imageUrl: \"\",\n          id: -1,\n          campusId: -1,\n          redirect: true\n        });\n      } catch (err) {\n        console.error(err);\n        alert(\"Error with edit!\");\n        this.setState({\n          errorCaught: true\n        });\n      }\n\n      ;\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      gpa: -1,\n      email: \"\",\n      imageUrl: \"\",\n      id: -1,\n      campusId: -1,\n      redirect: false,\n      errorCaught: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      firstname: this.props.student.firstname,\n      lastname: this.props.student.lastname,\n      gpa: this.props.student.gpa,\n      email: this.props.student.email,\n      imageUrl: this.props.student.imageUrl,\n      campusId: this.props.student.campusId,\n      id: this.props.student.id\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      window.location.reload();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        student: this.props.student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), this.state.errorCaught ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student First and Last names: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student's Campus ID: Must be a valid  and actual campus ID of a school within this database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student Email: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student Image: Can be left blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student GPA: Must be between 0.0 and 4.0.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\n\nexport default connect(null, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js"],"names":["Component","connect","EditStudentView","editStudentThunk","EditStudentContainer","constructor","props","handleChange","event","name","value","type","checked","target","setState","handleSubmit","preventDefault","new_info","firstname","state","lastname","gpa","email","imageUrl","campusId","id","student","editStudent","console","log","alert","redirect","err","error","errorCaught","redirectId","componentDidMount","componentWillUnmount","render","window","location","reload","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\n\n\n\nclass EditStudentContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          firstname: \"\", \n          lastname: \"\",\n          gpa: -1,\n          email: \"\",\n          imageUrl: \"\",\n          id: -1,\n          campusId: -1, \n          redirect: false, \n          errorCaught: false, \n          redirectId: null\n        };\n    }\n\n    componentDidMount() {\n      this.setState({firstname: this.props.student.firstname,\n          lastname: this.props.student.lastname, \n          gpa: this.props.student.gpa,\n          email: this.props.student.email,\n          imageUrl: this.props.student.imageUrl,\n          campusId: this.props.student.campusId,\n          id: this.props.student.id});  \n    }\n\n    handleChange = event => {\n      const {name, value, type, checked} = event.target\n      type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n    }\n    handleSubmit = async event =>  {\n      event.preventDefault(); \n  \n      let new_info = { \n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        gpa: this.state.gpa,\n        email: this.state.email,\n        imageUrl: this.state.imageUrl,\n        campusId: this.state.campusId,\n        id: this.state.id\n      };\n      if (new_info.imageUrl === \"\") { \n      }\n  \n      \n        try {\n          let student = await this.props.editStudent(new_info) \n          console.log(student.id); \n          alert(`${new_info.firstname} ${new_info.lastname}'s edit was saved.`); \n      \n          this.setState({\n            firstname: \"\", \n            lastname: \"\",\n            gpa: -1,\n            email: \"\",\n            imageUrl: \"\",\n            id: -1,\n            campusId: -1,\n            redirect: true, \n          });\n        }\n        catch(err) { \n          console.error(err); \n          alert(\"Error with edit!\");\n          this.setState({\n            errorCaught: true \n          });\n        };\n    }\n    \n    componentWillUnmount() {\n      this.setState({redirect: false, redirectId: null});\n    }\n    \n    render() {\n      if(this.state.redirect) {\n        window.location.reload(); \n      }\n  \n     return (\n        <div>\n          <EditStudentView\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}\n            student={this.props.student}\n          />\n          {this.state.errorCaught ? (\n            <div>\n              <br />\n              <p>Student First and Last names: Cannot be null.</p>\n              <p>Student's Campus ID: Must be a valid  and actual campus ID of a school within this database.</p>\n              <p>Student Email: Cannot be null.</p>\n              <p>Student Image: Can be left blank.</p>\n              <p>Student GPA: Must be between 0.0 and 4.0.</p>\n            </div>\n          ) : (\n            null\n          )}\n        </div>          \n      );\n    }\n  }\n  \n const mapDispatch = (dispatch) => {\n      return({\n          editStudent: (student) => dispatch(editStudentThunk(student)),\n      })\n  }\n  \n  export default connect(null, mapDispatch)(EditStudentContainer);\n\n\n\n\n\n\n\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}