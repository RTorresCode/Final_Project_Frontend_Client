{"ast":null,"code":"/*==================================================\r\n/src/store/reducers/students.js\r\n\r\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \r\nDepending on the Action object, the Reducer updates the State and return the new State object.\r\nIt also defines the State and its default initial value.\r\n================================================== */\nimport * as at from \"../actions/actionTypes\"; // Import Action Types (\"at\" keyword for Action Type)\n// REDUCER:\n\nconst allStudents = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // Empty array as default Initial State\n  switch (action.type) {\n    case at.FETCH_ALL_STUDENTS:\n      return action.payload;\n\n    case at.ADD_STUDENT:\n      return [...state, action.payload];\n\n    case at.DELETE_STUDENT:\n      return state.filter(student => student.id !== action.payload);\n\n    case at.EDIT_STUDENT:\n      return state.map(student => {\n        return student.id === action.payload.id ? action.payload : student;\n      });\n\n    default:\n      // If the Reducer doesn't recognize the Action Type, returns the previous (current) State unchanged.\n      return state;\n  }\n};\n\nexport default allStudents;","map":{"version":3,"names":["at","allStudents","state","action","type","FETCH_ALL_STUDENTS","payload","ADD_STUDENT","DELETE_STUDENT","filter","student","id","EDIT_STUDENT","map"],"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/store/reducers/students.js"],"sourcesContent":["/*==================================================\r\n/src/store/reducers/students.js\r\n\r\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \r\nDepending on the Action object, the Reducer updates the State and return the new State object.\r\nIt also defines the State and its default initial value.\r\n================================================== */\r\nimport * as at from \"../actions/actionTypes\";  // Import Action Types (\"at\" keyword for Action Type)\r\n\r\n// REDUCER:\r\nconst allStudents = (state=[], action) => {  // Empty array as default Initial State\r\n  switch (action.type) {\r\n    case at.FETCH_ALL_STUDENTS:\r\n      return action.payload;\r\n    case at.ADD_STUDENT:\r\n      return [...state, action.payload]\r\n    case at.DELETE_STUDENT:\r\n      return state.filter(student => student.id!==action.payload);\r\n      \r\n    case at.EDIT_STUDENT:\r\n      return state.map(student => { \r\n        return (\r\n          student.id===action.payload.id ? action.payload : student\r\n        );\r\n      });      \r\n    \r\n      default:\r\n      // If the Reducer doesn't recognize the Action Type, returns the previous (current) State unchanged.\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allStudents;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAZ,MAAoB,wBAApB,C,CAA+C;AAE/C;;AACA,MAAMC,WAAW,GAAG,YAAsB;EAAA,IAArBC,KAAqB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EAAG;EAC3C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKJ,EAAE,CAACK,kBAAR;MACE,OAAOF,MAAM,CAACG,OAAd;;IACF,KAAKN,EAAE,CAACO,WAAR;MACE,OAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;IACF,KAAKN,EAAE,CAACQ,cAAR;MACE,OAAON,KAAK,CAACO,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAaR,MAAM,CAACG,OAA5C,CAAP;;IAEF,KAAKN,EAAE,CAACY,YAAR;MACE,OAAOV,KAAK,CAACW,GAAN,CAAUH,OAAO,IAAI;QAC1B,OACEA,OAAO,CAACC,EAAR,KAAaR,MAAM,CAACG,OAAP,CAAeK,EAA5B,GAAiCR,MAAM,CAACG,OAAxC,GAAkDI,OADpD;MAGD,CAJM,CAAP;;IAMA;MACA;MACA,OAAOR,KAAP;EAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}