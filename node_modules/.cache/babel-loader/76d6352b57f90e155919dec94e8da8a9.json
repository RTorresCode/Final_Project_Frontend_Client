{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"changes have been made\");\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = this.state.campus;\n      campus.name = this.state.name;\n      campus.address = this.state.address;\n      campus.imageUrl = this.state.imageUrl;\n      campus.description = this.state.description;\n      await this.props.editCampus(campus);\n      this.setState({\n        name: '',\n        address: '',\n        imageUrl: '',\n        description: '',\n        redirect: true\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let new_info = {\n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address,\n        imageUrl: this.state.imageUrl,\n        id: this.state.id\n      };\n\n      if (new_info.imageUrl === \"\") {\n        delete new_info.imageUrl;\n      }\n\n      try {\n        let campus = await this.props.editCampus(new_info);\n        console.log(campus.id);\n        alert(`${new_info.name}'s edit was saved.`);\n        this.setState({\n          name: \"\",\n          address: \"\",\n          description: \"\",\n          imageUrl: \"\",\n          redirect: true,\n          id: -1\n        });\n      } catch (err) {\n        console.error(err);\n        alert(\"Error with edit!\");\n        this.setState({\n          errorCaught: true\n        });\n      }\n    };\n\n    this.state = {\n      name: this.props.campus.name,\n      imageUrl: this.props.campus.imageUrl,\n      address: this.props.campus.address,\n      description: this.props.campus.description,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      window.location.reload();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        campus: this.props.campus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), this.state.errorCaught ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus name: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus address: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus Image: Should be a valid image link, or can be left blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus Description: Can be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js"],"names":["Header","Component","connect","Redirect","EditCampusView","editCampusThunk","fetchCampusThunk","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","console","log","handleSubmit","preventDefault","campus","state","address","imageUrl","description","editCampus","redirect","new_info","id","alert","err","error","errorCaught","redirectId","componentDidMount","fetchCampus","match","params","componentWillUnmount","render","window","location","reload","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { fetchCampusThunk } from \"../../store/thunks\";\n\n\nclass EditCampusContainer extends Component {\n  constructor(props) { \n    super(props); \n    this.state = {\n      name: this.props.campus.name, \n      imageUrl: this.props.campus.imageUrl,\n      address: this.props.campus.address, \n      description: this.props.campus.description, \n      redirect: false, \n      redirectId: null\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchCampus(this.props.match.params.id);\n}\n\n\nhandleChange = event => {\n  this.setState({\n      [event.target.name]: event.target.value\n  });\n  console.log(\"changes have been made\");\n}\n  \n    \nhandleSubmit = async event => {\n  event.preventDefault(); \n\n  let campus = this.state.campus\n        campus.name = this.state.name\n        campus.address = this.state.address\n        campus.imageUrl = this.state.imageUrl\n        campus.description = this.state.description\n        \n        await this.props.editCampus(campus);\n        this.setState({\n          name: '',\n          address: '',\n          imageUrl: '',\n          description: '',\n          redirect: true\n        });      \n    }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhandleSubmit = async event => {\n      event.preventDefault();\n\n      let new_info = { \n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address,\n        imageUrl: this.state.imageUrl,\n        id: this.state.id\n      };\n      if (new_info.imageUrl === \"\") { \n        delete new_info.imageUrl; \n      }\n      try {\n        let campus = await this.props.editCampus(new_info)\n        console.log(campus.id); \n        alert(`${new_info.name}'s edit was saved.`); \n        \n        this.setState({\n          name: \"\", \n          address: \"\", \n          description: \"\",\n          imageUrl: \"\",\n          redirect: true, \n          id: -1\n        });\n      }\n      catch(err) {  \n        console.error(err); \n        alert(\"Error with edit!\");\n        this.setState({\n          errorCaught: true \n        });\n      }\n\n  }\n   \n  componentWillUnmount() {\n    this.setState({redirect: false, redirectId: null});\n  }\n  \n  render() {\n    if(this.state.redirect) {\n      window.location.reload(); \n    }\n\n    return (\n      <div>\n        <EditCampusView\n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}\n          campus={this.props.campus}  \n        />\n        {this.state.errorCaught ? (\n          <div>\n            <br />\n            <p>Campus name: Cannot be null.</p>\n            <p>Campus address: Cannot be null.</p>\n            <p>Campus Image: Should be a valid image link, or can be left blank.</p>\n            <p>Campus Description: Can be null.</p>\n          </div>\n        ) : (\n          null\n        )}\n      </div>          \n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\n    })\n}\n\n\nexport default connect(null, mapDispatch)(EditCampusContainer);\n\n       \n\n\n\n\n\n\n        "]},"metadata":{},"sourceType":"module"}