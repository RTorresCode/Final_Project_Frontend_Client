{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RT3\\\\Documents\\\\Projects\\\\Web Development\\\\Final Project (Frontend)\\\\src\\\\components\\\\containers\\\\StudentContainer.js\";\n\n/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentContainer extends Component {\n  constructor(props) {\n    // initialize state\n    super(props);\n\n    this.handleDelete = async studentId => {\n      await this.props.deleteStudent(studentId);\n      this.setState({\n        studRedirect: true\n      });\n    };\n\n    this.state = {\n      studRedirect: false\n    };\n  } // Get student data from back-end database\n\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    return this.state.studRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/students`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        handleDelete: this.handleDelete,\n        student: this.props.student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n\n\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId))\n  };\n}; // Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","Redirect","connect","fetchStudentThunk","deleteStudentThunk","StudentView","StudentContainer","constructor","props","handleDelete","studentId","deleteStudent","setState","studRedirect","state","componentDidMount","fetchStudent","match","params","id","render","student","mapState","mapDispatch","dispatch"],"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    fetchStudentThunk,\r\n    deleteStudentThunk\r\n} from \"../../store/thunks\";\r\nimport { StudentView } from \"../views\";\r\n\r\n\r\nclass StudentContainer extends Component {\r\n    constructor(props) { // initialize state\r\n        super(props);\r\n        this.state = {\r\n            studRedirect: false,\r\n        }\r\n    }\r\n    // Get student data from back-end database\r\n    componentDidMount() {\r\n        //getting student ID from url\r\n        this.props.fetchStudent(this.props.match.params.id);\r\n    }\r\n    handleDelete = async studentId => {\r\n        await this.props.deleteStudent(studentId);\r\n        this.setState({\r\n            studRedirect: true\r\n        })\r\n    }\r\n\r\n    // Render Student view by passing student data as props to the corresponding View component\r\n    render() {\r\n        return (\r\n            this.state.studRedirect ? <Redirect to={`/students`} /> :\r\n                <div>\r\n                    <Header />\r\n                    <StudentView handleDelete={this.handleDelete} student={this.props.student} />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\r\nconst mapState = (state) => {\r\n    return {\r\n        student: state.student,  // Get the State object from Reducer \"student\"\r\n    };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n        deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId))\r\n    };\r\n};\r\n\r\n// Export store-connected container by default\r\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(StudentContainer);"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,iBADJ,EAEIC,kBAFJ,QAGO,oBAHP;AAIA,SAASC,WAAT,QAA4B,UAA5B;;;AAGA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;EACrCO,WAAW,CAACC,KAAD,EAAQ;IAAE;IACjB,MAAMA,KAAN;;IADe,KAWnBC,YAXmB,GAWJ,MAAMC,SAAN,IAAmB;MAC9B,MAAM,KAAKF,KAAL,CAAWG,aAAX,CAAyBD,SAAzB,CAAN;MACA,KAAKE,QAAL,CAAc;QACVC,YAAY,EAAE;MADJ,CAAd;IAGH,CAhBkB;;IAEf,KAAKC,KAAL,GAAa;MACTD,YAAY,EAAE;IADL,CAAb;EAGH,CANoC,CAOrC;;;EACAE,iBAAiB,GAAG;IAChB;IACA,KAAKP,KAAL,CAAWQ,YAAX,CAAwB,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;EACH;;EAQD;EACAC,MAAM,GAAG;IACL,OACI,KAAKN,KAAL,CAAWD,YAAX,gBAA0B,QAAC,QAAD;MAAU,EAAE,EAAG;IAAf;MAAA;MAAA;MAAA;IAAA,QAA1B,gBACI;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,WAAD;QAAa,YAAY,EAAE,KAAKJ,YAAhC;QAA8C,OAAO,EAAE,KAAKD,KAAL,CAAWa;MAAlE;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFR;EAOH;;AA5BoC,C,CA8BzC;AACA;;;AACA,MAAMC,QAAQ,GAAIR,KAAD,IAAW;EACxB,OAAO;IACHO,OAAO,EAAEP,KAAK,CAACO,OADZ,CACsB;;EADtB,CAAP;AAGH,CAJD,C,CAKA;AACA;;;AACA,MAAME,WAAW,GAAIC,QAAD,IAAc;EAC9B,OAAO;IACHR,YAAY,EAAGG,EAAD,IAAQK,QAAQ,CAACrB,iBAAiB,CAACgB,EAAD,CAAlB,CAD3B;IAEHR,aAAa,EAAGD,SAAD,IAAec,QAAQ,CAACpB,kBAAkB,CAACM,SAAD,CAAnB;EAFnC,CAAP;AAIH,CALD,C,CAOA;AACA;AACA;;;AACA,eAAeR,OAAO,CAACoB,QAAD,EAAWC,WAAX,CAAP,CAA+BjB,gBAA/B,CAAf"},"metadata":{},"sourceType":"module"}