{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/AllStudentsContainer.js\";\n\n/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { fetchAllStudentsThunk, deleteStudentThunk } from '../../store/thunks';\nimport AllStudentsView from '../views/AllStudentsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllStudentsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggleEdit = () => {\n      let new_editor = !this.state.editor;\n      this.setState({\n        editor: new_editor\n      });\n    };\n  }\n\n  // Get all students data from back-end database\n  componentDidMount() {\n    this.props.fetchAllStudents();\n    window.scrollTo(0, 0);\n  }\n\n  // Render All Students view by passing all students data as props to the corresponding View component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllStudentsView, {\n        students: this.props.allStudents,\n        deleteStudent: this.props.deleteStudent,\n        toggleEdit: this.toggleEdit,\n        editing: this.state.editor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\n\n\nconst mapState = state => {\n  return {\n    allStudents: state.allStudents // Get the State object from Reducer \"allStudents\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId))\n  };\n}; // Export store-connected container by default\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/AllStudentsContainer.js"],"names":["Header","Component","connect","withRouter","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","AllStudentsContainer","toggleEdit","new_editor","state","editor","setState","componentDidMount","props","fetchAllStudents","window","scrollTo","render","allStudents","deleteStudent","mapState","mapDispatch","dispatch","studentId"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACEC,qBADF,EAEEC,kBAFF,QAGO,oBAHP;AAKA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAO3CO,UAP2C,GAO9B,MAAM;AACjB,UAAIC,UAAU,GAAG,CAAC,KAAKC,KAAL,CAAWC,MAA7B;AACA,WAAKC,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAEF;AADI,OAAd;AAGD,KAZ0C;AAAA;;AAC3C;AACAI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,gBAAX;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,CAAlB;AACD;;AAUD;AACAC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AACE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,WADvB;AAEE,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWM,aAF5B;AAGE,QAAA,UAAU,EAAE,KAAKZ,UAHnB;AAIE,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC;AAJtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5B0C,C,CA+B7C;AACA;AACA;;;AACA,MAAMU,QAAQ,GAAIX,KAAD,IAAW;AAC1B,SAAO;AACLS,IAAAA,WAAW,EAAET,KAAK,CAACS,WADd,CAC4B;;AAD5B,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAMG,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLR,IAAAA,gBAAgB,EAAE,MAAMQ,QAAQ,CAACnB,qBAAqB,EAAtB,CAD3B;AAELgB,IAAAA,aAAa,EAAGI,SAAD,IAAeD,QAAQ,CAAClB,kBAAkB,CAACmB,SAAD,CAAnB;AAFjC,GAAP;AAID,CALD,C,CAOA;AACA;AACA;;;AACA,eAAerB,UAAU,CAACD,OAAO,CAACmB,QAAD,EAAWC,WAAX,CAAP,CAA+Bf,oBAA/B,CAAD,CAAzB","sourcesContent":["/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nimport { \n  fetchAllStudentsThunk,\n  deleteStudentThunk\n} from '../../store/thunks';\n\nimport AllStudentsView from '../views/AllStudentsView';\n\nclass AllStudentsContainer extends Component {\n  // Get all students data from back-end database\n  componentDidMount() {\n    this.props.fetchAllStudents();\n    window.scrollTo(0,0);\n  }\n\n  toggleEdit = () => {\n    let new_editor = !this.state.editor;\n    this.setState({\n      editor: new_editor \n    });\n  }\n\n\n  // Render All Students view by passing all students data as props to the corresponding View component\n  render(){\n    return(\n      <div>\n        <Header />\n        <AllStudentsView \n          students={this.props.allStudents}\n          deleteStudent={this.props.deleteStudent}   \n          toggleEdit={this.toggleEdit}\n          editing={this.state.editor}\n        />\n      </div>\n    )\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\nconst mapState = (state) => {\n  return {\n    allStudents: state.allStudents,  // Get the State object from Reducer \"allStudents\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)),\n  };\n};\n\n// Export store-connected container by default\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));"]},"metadata":{},"sourceType":"module"}