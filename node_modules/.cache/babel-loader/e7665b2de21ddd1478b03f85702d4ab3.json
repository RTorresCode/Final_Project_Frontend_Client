{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/views/CampusView.js\";\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus,\n    editing,\n    toggleEdit,\n    deleteCampus,\n    enrollStudent,\n    dropStudent\n  } = props; // Render a single Campus view with list of its students\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"ID: \", campus.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl,\n      alt: \"Campus Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), campus.students.length === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"No students enrolled at \", campus.name, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : campus.students.map(student => {\n      let name = student.firstname + \" \" + student.lastname;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/student/${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deleteCampus(campus.id);\n        alert(\"Campus Deleted!\");\n      },\n      children: \"Delete Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"studentId\",\n      placeholder: \"Enter Student ID to add / remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        enrollStudent(campus.id, document.getElementById(\"studentId\").value);\n        console.log(document.getElementById(\"studentId\").value);\n        alert(\"Add attempted\");\n      },\n      children: \"Add This Student ID to Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dropStudent(campus.id, document.getElementById(\"studentId\").value);\n        console.log(document.getElementById(\"studentId\").value);\n        alert(\"Remove attempted\");\n      },\n      children: \"Remove This Student ID from Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEdit,\n      children: \"Quit Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEdit,\n      children: \"Edit Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/views/CampusView.js"],"names":["Link","CampusView","props","campus","editing","toggleEdit","deleteCampus","enrollStudent","dropStudent","name","address","id","description","imageUrl","students","length","map","student","firstname","lastname","alert","document","getElementById","value","console","log"],"mappings":"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","sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const {campus, editing, toggleEdit, deleteCampus, enrollStudent, dropStudent} = props;\n  \n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <h6>ID: {campus.id}</h6>\n      <p>{campus.description}</p>\n      <img src={campus.imageUrl} alt=\"Campus Profile\"/>\n      {campus.students.length === 0 ? (\n        <h2>No students enrolled at {campus.name}.</h2>\n      ) : (\n        campus.students.map( student => {\n          let name = student.firstname + \" \" + student.lastname;\n          return (\n            <div key={student.id}>\n              <Link to={`/student/${student.id}`}>\n                <h2>{name}</h2>\n              </Link>             \n            </div>\n          );\n        })\n      )}\n      <br /> \n      {/* Was completely breaking the page, as the student/campus gets instant deleted, changed how onClick written */}\n      <button onClick={() => {deleteCampus(campus.id); alert(\"Campus Deleted!\")}}>Delete Campus</button>\n      <br />\n      <br />\n      <input \n      type=\"text\" \n      id=\"studentId\"\n      placeholder=\"Enter Student ID to add / remove\"\n      />\n      <br />\n      <button onClick={() => {enrollStudent(campus.id, document.getElementById(\"studentId\").value); console.log(document.getElementById(\"studentId\").value); alert(\"Add attempted\")}}>Add This Student ID to Campus</button> \n      <br />\n      <button onClick={() => {dropStudent(campus.id, document.getElementById(\"studentId\").value); console.log(document.getElementById(\"studentId\").value); alert(\"Remove attempted\")}}>Remove This Student ID from Campus</button>\n      <br />\n      <br />\n      {editing ? (\n        <button onClick={toggleEdit}>Quit Edit</button>\n      ) : (\n        <button onClick={toggleEdit}>Edit Campus</button>\n      )}\n      <br />\n    </div>\n  );\n};\n\nexport default CampusView;"]},"metadata":{},"sourceType":"module"}