{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/views/AllCampusesView.js\";\n\n/*==================================================\nAllCampusesView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display all campuses.\n================================================== */\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllCampusesView = props => {\n  const {\n    allCampuses,\n    deleteCampus\n  } = props; // If there is no campus, display a message.\n\n  if (!props.allCampuses.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no campuses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: \"Please add a new campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/newcampus`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New Campus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } // If there is at least one campus, render All Campuses view \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"allCampuses\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pageTitle\",\n      children: [\"All Campuses\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/newcampus`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addButton\",\n            children: \"Add New Campus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), props.allCampuses.map(campus => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/campuses/${campus.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: campus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pfp\",\n        style: {\n          width: '10%',\n          borderRadius: '50%'\n        },\n        src: campus.imageUrl ? campus.imageUrl : \"https://i.imgur.com/srY1LWf.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Campus ID: \", campus.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Address: \", campus.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Description: \", campus.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => deleteCampus(campus.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, campus.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newcampus`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add New Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_c = AllCampusesView;\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired\n};\nexport default AllCampusesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCampusesView\");","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/views/AllCampusesView.js"],"names":["PropTypes","Link","AllCampusesView","props","allCampuses","deleteCampus","length","map","campus","id","name","width","borderRadius","imageUrl","address","description","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["/*==================================================\nAllCampusesView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display all campuses.\n================================================== */\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst AllCampusesView = (props) => {\n  const {allCampuses, deleteCampus} = props;\n\n  // If there is no campus, display a message.\n  if (!props.allCampuses.length) {\n    return (\n      <div>\n      <p>There are no campuses.</p>\n      <p className=\"text\">Please add a new campus</p>\n      <Link to={`/newcampus`}>\n        <button>Add New Campus</button>\n      </Link>  \n      </div>\n      );\n  }\n\n// If there is at least one campus, render All Campuses view \nreturn (\n  <div className=\"allCampuses\">\n      <h1 className=\"pageTitle\">All Campuses \n        <span>\n          <Link to={`/newcampus`}>\n            <button className=\"addButton\">Add New Campus</button>\n          </Link>\n        </span>\n        </h1>\n\n    {props.allCampuses.map((campus) => (\n      <div key={campus.id}>\n        <Link to={`/campuses/${campus.id}`}>\n          <h2>{campus.name}</h2>\n        </Link>\n        <img className=\"pfp\" style={{width:'10%', borderRadius:'50%'}} src={campus.imageUrl ? campus.imageUrl : \"https://i.imgur.com/srY1LWf.jpg\"} alt=\"\" />\n        <h4>Campus ID: {campus.id}</h4>\n        <h4>Address: {campus.address}</h4>\n        <h4>Description: {campus.description}</h4>\n        <button className=\"btn\" onClick={() => deleteCampus(campus.id)}>Delete</button>\n        <hr/>\n      </div>\n    ))}\n    <br/>\n    <Link to={`/newcampus`}>\n      <button className=\"btn\">Add New Campus</button>\n    </Link>\n    <br/>\n    <br/>\n  </div>\n);\n};\n\nAllCampusesView.propTypes = {\nallCampuses: PropTypes.array.isRequired,\n};\n\nexport default AllCampusesView; \n     \n      \n      \n      \n      \n      \n      \n      \n      \n      "]},"metadata":{},"sourceType":"module"}