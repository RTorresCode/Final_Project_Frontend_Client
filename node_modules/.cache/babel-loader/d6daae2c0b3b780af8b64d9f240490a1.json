{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RT3\\\\Documents\\\\Projects\\\\Web Development\\\\Final Project (Frontend)\\\\src\\\\components\\\\containers\\\\EditCampusContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = event.target;\n      type === \"checkbox\" ? this.setState({\n        [name]: checked\n      }) : this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let new_info = {\n        name: this.state.name,\n        imageUrl: this.state.imageUrl,\n        address: this.state.address,\n        description: this.state.description,\n        id: this.state.id\n      };\n\n      if (new_info.imageUrl !== \"\") {}\n\n      try {\n        let campus = await this.props.editCampus(new_info);\n        alert(`${new_info.name}'s edit was saved.`);\n        this.setState({\n          name: \"\",\n          imageUrl: \"\",\n          address: -1,\n          description: \"\",\n          id: -1,\n          redirect: true\n        });\n      } catch (err) {\n        console.error(err);\n        alert(\"Error with edit!\");\n        this.setState({\n          errorCaught: true\n        });\n      }\n\n      ;\n    };\n\n    this.state = {\n      name: \"\",\n      imageUrl: props.campus.imageUrl,\n      address: \"\",\n      description: \"\",\n      id: props.campus.id,\n      redirect: false,\n      errorCaught: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      name: this.state.name,\n      imageUrl: this.state.imageUrl,\n      address: this.state.address,\n      description: this.state.description,\n      id: this.state.id\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    //if (this.state.redirect) {\n    //    window.location.reload();\n    //}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        campus: this.props.campus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), this.state.errorCaught ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus name: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus Image: Can't be left blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus address: Cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Campus description: Can't be left blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(EditCampusContainer);","map":{"version":3,"names":["Component","connect","EditCampusView","editCampusThunk","EditCampusContainer","constructor","props","handleChange","event","name","value","type","checked","target","setState","handleSubmit","preventDefault","new_info","state","imageUrl","address","description","id","campus","editCampus","alert","redirect","err","console","error","errorCaught","redirectId","componentDidMount","componentWillUnmount","render","mapDispatch","dispatch"],"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/components/containers/EditCampusContainer.js"],"sourcesContent":["\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport EditCampusView from '../views/EditCampusView';\r\nimport { editCampusThunk } from '../../store/thunks';\r\n\r\n\r\n\r\nclass EditCampusContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            imageUrl: props.campus.imageUrl,\r\n            address: \"\",\r\n            description: \"\",\r\n            id: props.campus.id,\r\n            redirect: false,\r\n            errorCaught: false,\r\n            redirectId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            name: this.state.name,\r\n            imageUrl: this.state.imageUrl,\r\n            address: this.state.address,\r\n            description: this.state.description,\r\n            id: this.state.id\r\n        });\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        let new_info = {\r\n            name: this.state.name,\r\n            imageUrl: this.state.imageUrl,\r\n            address: this.state.address,\r\n            description: this.state.description,\r\n            id: this.state.id\r\n        };\r\n        if (new_info.imageUrl !== \"\") {\r\n        }\r\n\r\n\r\n        try {\r\n            let campus = await this.props.editCampus(new_info)\r\n            alert(`${new_info.name}'s edit was saved.`);\r\n\r\n            this.setState({\r\n                name: \"\",\r\n                imageUrl: \"\",\r\n                address: -1,\r\n                description: \"\",\r\n                id: -1,\r\n                redirect: true,\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            alert(\"Error with edit!\");\r\n            this.setState({\r\n                errorCaught: true\r\n            });\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ redirect: false, redirectId: null });\r\n    }\r\n\r\n    render() {\r\n        //if (this.state.redirect) {\r\n        //    window.location.reload();\r\n        //}\r\n\r\n        return (\r\n            <div>\r\n                <EditCampusView\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    campus={this.props.campus}\r\n                />\r\n                {this.state.errorCaught ? (\r\n                    <div>\r\n                        <br />\r\n                        <p>Campus name: Cannot be null.</p>\r\n                        <p>Campus Image: Can't be left blank.</p>\r\n                        <p>Campus address: Cannot be null.</p>\r\n                        <p>Campus description: Can't be left blank.</p>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return ({\r\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatch)(EditCampusContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}