{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = event.target;\n      type === \"checkbox\" ? this.setState({\n        [name]: checked\n      }) : this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl,\n        id: this.props.campus.id //id or campusID\n\n      };\n      console.log(\"campus: \");\n      console.log(campus);\n      console.log(\"this.props.campus: \");\n      console.log(this.props.campus);\n      let newCampus = await this.props.editCampus(campus);\n      console.log(\"newCampus: \");\n      console.log(newCampus);\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: 0,\n        redirect: true,\n        redirectId: this.props.campus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      id: -1,\n      redirect: false,\n      errorCaught: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      name: this.props.campus.name,\n      address: this.props.campus.address,\n      description: this.props.campus.description,\n      imageUrl: this.props.campus.imageUrl,\n      id: this.props.campus.id\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditCampusView, {\n      campus: this.props.campus,\n      editCampus: this.props.editCampus,\n      deleteCampus: this.props.deleteCampus,\n      fetchCampus: this.props.fetchCampus,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js"],"names":["Component","connect","EditCampusView","editCampusThunk","EditCampusContainer","constructor","props","handleChange","event","name","value","type","checked","target","setState","handleSubmit","preventDefault","campus","state","address","description","imageUrl","id","console","log","newCampus","editCampus","redirect","redirectId","errorCaught","componentDidMount","componentWillUnmount","render","deleteCampus","fetchCampus","mapState","mapDispatch","dispatch","fetchCampusThunk"],"mappings":"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","sourcesContent":["\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\n\n\nclass EditCampusContainer extends Component {\n  constructor(props) { \n    super(props); \n    this.state = {\n        name: \"\", \n        address: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        id: -1,\n        redirect: false, \n        errorCaught: false,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({name: this.props.campus.name, \n        address: this.props.campus.address,\n        description: this.props.campus.description,\n        imageUrl: this.props.campus.imageUrl,\n        id: this.props.campus.id});  \n  }\n\n\n    handleChange = event => {\n      const {name, value, type, checked} = event.target\n      type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\n    }\n  \n    handleSubmit = async event => {\n        event.preventDefault();\n       \n\n\n\n\n        let campus = {\n            name: this.state.name,\n            address: this.state.address,\n            description: this.state.description,\n            imageUrl: this.state.imageUrl,\n            id: this.props.campus.id //id or campusID\n        };\n\n        console.log(\"campus: \")\n        console.log(campus)\n\n        console.log(\"this.props.campus: \")\n        console.log(this.props.campus)\n\n        let newCampus = await this.props.editCampus(campus);\n\n        console.log(\"newCampus: \")\n        console.log(newCampus)\n\n        this.setState({\n            name: \"\", \n            address: \"\", \n            description: \"\",\n            imageUrl: 0,\n            redirect: true, \n            redirectId: this.props.campus.id\n          });\n      }\n  \n      componentWillUnmount() {\n          this.setState({redirect: false, redirectId: null});\n      }\n\n      render() {\n\n        if(this.state.redirect) {\n          return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n        }\n        return (\n            \n            <EditCampusView \n            campus={this.props.campus}\n            editCampus={this.props.editCampus}\n            deleteCampus={this.props.deleteCampus}\n            fetchCampus={this.props.fetchCampus}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n    }\n}\n\nconst mapState = (state) => {\n    return {\n      campus: state.campus,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n        editCampus: (campus) => dispatch(editCampusThunk(campus))\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);\n\n  \n\n\n"]},"metadata":{},"sourceType":"module"}