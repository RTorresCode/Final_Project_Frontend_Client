{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/StudentContainer.js\";\n\n/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentContainer extends Component {\n  constructor(props) {\n    // initialize state\n    super(props);\n\n    this.handleDelete = async studentId => {\n      await this.props.deleteStudent(studentId);\n      this.setState({\n        studRedirect: true\n      });\n    };\n\n    this.state = {\n      studRedirect: false\n    };\n  } // Get student data from back-end database\n\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    return this.state.studRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/students`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        handleDelete: this.handleDelete,\n        student: this.props.student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n\n\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId))\n  };\n}; // Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/StudentContainer.js"],"names":["Header","React","Component","Redirect","connect","fetchStudentThunk","deleteStudentThunk","StudentView","StudentContainer","constructor","props","handleDelete","studentId","deleteStudent","setState","studRedirect","state","componentDidMount","fetchStudent","match","params","id","render","student","mapState","mapDispatch","dispatch"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EACSC,kBADT,QACoC,oBADpC;AAEA,SAASC,WAAT,QAA4B,UAA5B;;;AAGA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE;AACnB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAMC,SAAN,IAAmB;AAChC,YAAM,KAAKF,KAAL,CAAWG,aAAX,CAAyBD,SAAzB,CAAN;AACA,WAAKE,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KAhBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD,GANsC,CAOvC;;;AACAE,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKP,KAAL,CAAWQ,YAAX,CAAwB,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACD;;AAQD;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,KAAKN,KAAL,CAAWD,YAAX,gBAA0B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,YAA1B,gBACA;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAE,KAAKJ,YAAhC;AAA8C,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWa;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAOD;;AA5BsC,C,CA8BzC;AACA;;;AACA,MAAMC,QAAQ,GAAIR,KAAD,IAAW;AAC1B,SAAO;AACLO,IAAAA,OAAO,EAAEP,KAAK,CAACO,OADV,CACoB;;AADpB,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAME,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLR,IAAAA,YAAY,EAAGG,EAAD,IAAQK,QAAQ,CAACrB,iBAAiB,CAACgB,EAAD,CAAlB,CADzB;AAELR,IAAAA,aAAa,EAAGD,SAAD,IAAec,QAAQ,CAACpB,kBAAkB,CAACM,SAAD,CAAnB;AAFjC,GAAP;AAID,CALD,C,CAOA;AACA;AACA;;;AACA,eAAeR,OAAO,CAACoB,QAAD,EAAWC,WAAX,CAAP,CAA+BjB,gBAA/B,CAAf","sourcesContent":["/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk , \n         deleteStudentThunk  } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\n\n\nclass StudentContainer extends Component {\n  constructor(props) { // initialize state\n    super(props); \n    this.state = {\n      studRedirect: false,\n    }\n  }\n  // Get student data from back-end database\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n  handleDelete = async studentId => {\n    await this.props.deleteStudent(studentId);\n    this.setState({\n      studRedirect: true\n    })\n  }\n  \n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    return (\n      this.state.studRedirect ? <Redirect to={`/students`}/> :\n      <div>\n        <Header />\n        <StudentView handleDelete={this.handleDelete} student={this.props.student} />\n      </div>\n    );\n  }\n}   \n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n  return {\n    student: state.student,  // Get the State object from Reducer \"student\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId))\n  };\n};\n\n// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(StudentContainer);"]},"metadata":{},"sourceType":"module"}