{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  // componentDidMount() {\n  //   this.props.fetchStudent(this.props.match.params.id);\n  //   this.props.fetchAllCampuses();\n  // }\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      if (!this.props.allCampuses.map(({\n        id\n      }) => id).includes(parseInt(this.state.campusId))) {\n        alert(\"Please enter a valid campusId.\");\n        this.setState({\n          redirect: false\n        });\n      } else {\n        let student = this.state.student;\n        student.firstname = this.state.firstname;\n        student.lastname = this.state.lastname;\n        student.campusId = this.state.campusId;\n        student.imageURL = this.state.imageURL;\n        student.gpa = this.state.gpa;\n        student.email = this.state.email;\n        await this.props.editStudent(student);\n        this.setState({\n          firstname: '',\n          lastname: '',\n          campusId: '',\n          email: '',\n          imageURL: '',\n          gpa: '',\n          redirect: true\n        });\n      }\n    };\n\n    this.state = {\n      student: student,\n      firstname: student.firstname,\n      lastname: student.lastname,\n      campusId: student.campusId,\n      imageURL: student.imageURL,\n      gpa: student.gpa,\n      email: student.email,\n      studentId: student.id,\n      redirect: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.props.match.params.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.props.student,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        allCampuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student,\n    allCampuses: state.allCampuses\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk())\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js"],"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","fetchAllCampusesThunk","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","allCampuses","map","id","includes","parseInt","state","campusId","alert","redirect","student","firstname","lastname","imageURL","gpa","email","editStudent","studentId","render","match","params","mapState","mapDispatch","dispatch","fetchStudent","fetchAllCampuses"],"mappings":"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","sourcesContent":["import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\n\n\nclass EditStudentContainer extends Component {\n  // componentDidMount() {\n    \n  //   this.props.fetchStudent(this.props.match.params.id);\n  //   this.props.fetchAllCampuses();\n  // }\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      student: student,\n      firstname: student.firstname,\n      lastname: student.lastname,\n      campusId: student.campusId,\n      imageURL: student.imageURL,\n      gpa: student.gpa,\n      email: student.email,\n      studentId: student.id, \n      redirect: false\n    };\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  handleSubmit = async event => {\n    event.preventDefault();  \n    \n    if(!(this.props.allCampuses.map(({id}) => id)).includes(parseInt(this.state.campusId))){\n      alert(\"Please enter a valid campusId.\")\n      this.setState({\n        redirect: false\n      })\n    } \n    else{\n      let student = this.state.student\n      student.firstname = this.state.firstname\n      student.lastname = this.state.lastname\n      student.campusId = this.state.campusId\n      student.imageURL = this.state.imageURL\n      student.gpa = this.state.gpa\n      student.email = this.state.email\n \n      await this.props.editStudent(student);\n\n      this.setState({\n        firstname: '', \n        lastname: '', \n        campusId: '', \n        email: '',\n        imageURL: '',\n        gpa: '',\n        redirect: true\n      });\n    }\n  }\n  render() {\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.props.match.params.id}`}/>)\n    }\n    return (\n      <div>\n        <Header />\n        <EditStudentView student={this.props.student} \n        handleChange = {this.handleChange} \n        handleSubmit={this.handleSubmit}\n        allCampuses={this.props.allCampuses}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    student: state.student,\n    allCampuses: state.allCampuses,  \n  };\n};\n    \nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    editStudent: (student) => dispatch(editStudentThunk(student)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);    "]},"metadata":{},"sourceType":"module"}