{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  // componentDidMount() {\n  //   this.props.fetchStudent(this.props.match.params.id);\n  //   this.props.fetchAllCampuses();\n  // }\n  constructor(props) {\n    super(props);\n\n    this.handleInit = async studentId => {\n      await this.props.fetchStudent(studentId);\n      this.setState({\n        firstname: this.props.student.firstname,\n        lastname: this.props.student.lastname,\n        campusId: this.props.student.campusId,\n        email: this.props.student.email,\n        imageUrl: this.props.student.imageUrl,\n        gpa: this.props.student.gpa,\n        redirectId: this.props.student.id\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let contSubmit = false;\n      let formCampusId = this.state.campusId;\n\n      if (!formCampusId) {\n        contSubmit = true;\n        formCampusId = null;\n      }\n\n      if (!contSubmit) {\n        for (let i of this.props.allCampuses) {\n          if (i.id == this.state.campusId) {\n            contSubmit = true;\n            break;\n          }\n        }\n      }\n\n      if (!contSubmit) {\n        this.setState({\n          errorMsg: \"Invalid Campus ID: Campus does not exist\"\n        });\n      } else {\n        let student = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          campusId: formCampusId,\n          email: this.state.email,\n          imageUrl: this.state.imageUrl,\n          gpa: this.state.gpa,\n          id: this.state.redirectId\n        };\n        await this.props.editStudent(student);\n        this.setState({\n          firstname: '',\n          lastname: '',\n          campusId: '',\n          email: '',\n          imageURL: '',\n          redirect: true\n        });\n      }\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      campusId: null,\n      email: \"\",\n      imageUrl: null,\n      gpa: null,\n      redirect: false,\n      redirectId: null,\n      errorMsg: null\n    };\n  }\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchAllCampuses();\n    this.handleInit(this.props.match.params.id);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.props.match.params.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.props.student,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        allCampuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student,\n    allCampuses: state.allCampuses\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk())\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js"],"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","fetchAllCampusesThunk","EditStudentContainer","constructor","props","handleInit","studentId","fetchStudent","setState","firstname","student","lastname","campusId","email","imageUrl","gpa","redirectId","id","handleChange","event","target","name","value","handleSubmit","preventDefault","contSubmit","formCampusId","state","i","allCampuses","errorMsg","editStudent","imageURL","redirect","componentDidMount","fetchAllCampuses","match","params","render","mapState","mapDispatch","dispatch"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,qBAAT,QAAsC,oBAAtC;;;AAGA,MAAMC,oBAAN,SAAmCP,SAAnC,CAA6C;AAC3C;AAEA;AACA;AACA;AAEAQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAsBlBC,UAtBkB,GAsBL,MAAMC,SAAN,IAAmB;AAC9B,YAAM,KAAKF,KAAL,CAAWG,YAAX,CAAwBD,SAAxB,CAAN;AACA,WAAKE,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM,OAAX,CAAmBD,SADpB;AAEVE,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWM,OAAX,CAAmBC,QAFnB;AAGVC,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWM,OAAX,CAAmBE,QAHnB;AAIVC,QAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWM,OAAX,CAAmBG,KAJhB;AAKVC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWM,OAAX,CAAmBI,QALnB;AAMVC,QAAAA,GAAG,EAAE,KAAKX,KAAL,CAAWM,OAAX,CAAmBK,GANd;AAOVC,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWM,OAAX,CAAmBO;AAPrB,OAAd;AASD,KAjCiB;;AAAA,SAmClBC,YAnCkB,GAmCHC,KAAK,IAAI;AACtB,WAAKX,QAAL,CAAc;AACZ,SAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADtB,OAAd;AAGD,KAvCiB;;AAAA,SAyClBC,YAzCkB,GAyCH,MAAMJ,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACK,cAAN;AAEA,UAAIC,UAAU,GAAG,KAAjB;AACA,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWf,QAA9B;;AAGA,UAAG,CAACc,YAAJ,EAAkB;AACdD,QAAAA,UAAU,GAAG,IAAb;AACAC,QAAAA,YAAY,GAAG,IAAf;AACH;;AAED,UAAG,CAACD,UAAJ,EAAgB;AACZ,aAAI,IAAIG,CAAR,IAAa,KAAKxB,KAAL,CAAWyB,WAAxB,EAAqC;AACjC,cAAGD,CAAC,CAACX,EAAF,IAAQ,KAAKU,KAAL,CAAWf,QAAtB,EAAgC;AAC5Ba,YAAAA,UAAU,GAAG,IAAb;AACA;AACH;AACJ;AACJ;;AACD,UAAG,CAACA,UAAJ,EAAgB;AACZ,aAAKjB,QAAL,CAAc;AACVsB,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH,OAJD,MAKK;AACD,YAAIpB,OAAO,GAAG;AACVD,UAAAA,SAAS,EAAE,KAAKkB,KAAL,CAAWlB,SADZ;AAEVE,UAAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWhB,QAFX;AAGVC,UAAAA,QAAQ,EAAEc,YAHA;AAIVb,UAAAA,KAAK,EAAE,KAAKc,KAAL,CAAWd,KAJR;AAKVC,UAAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWb,QALX;AAMVC,UAAAA,GAAG,EAAE,KAAKY,KAAL,CAAWZ,GANN;AAOVE,UAAAA,EAAE,EAAE,KAAKU,KAAL,CAAWX;AAPL,SAAd;AAUF,cAAM,KAAKZ,KAAL,CAAW2B,WAAX,CAAuBrB,OAAvB,CAAN;AAEA,aAAKF,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE,EADC;AAEZE,UAAAA,QAAQ,EAAE,EAFE;AAGZC,UAAAA,QAAQ,EAAE,EAHE;AAIZC,UAAAA,KAAK,EAAE,EAJK;AAKZmB,UAAAA,QAAQ,EAAE,EALE;AAMZC,UAAAA,QAAQ,EAAE;AANE,SAAd;AAQD;AACF,KAxFiB;;AAGhB,SAAKN,KAAL,GAAa;AACXlB,MAAAA,SAAS,EAAE,EADA;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,QAAQ,EAAE,IALC;AAMXC,MAAAA,GAAG,EAAE,IANM;AAOXkB,MAAAA,QAAQ,EAAE,KAPC;AAQXjB,MAAAA,UAAU,EAAE,IARD;AASXc,MAAAA,QAAQ,EAAE;AATC,KAAb;AAWD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAK9B,KAAL,CAAW+B,gBAAX;AACA,SAAK9B,UAAL,CAAgB,KAAKD,KAAL,CAAWgC,KAAX,CAAiBC,MAAjB,CAAwBpB,EAAxC;AACD;;AAqEDqB,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWM,QAAd,EAAwB;AACtB,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,YAAW,KAAK7B,KAAL,CAAWgC,KAAX,CAAiBC,MAAjB,CAAwBpB,EAAG;AAArD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AACD,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWM,OAArC;AACA,QAAA,YAAY,EAAI,KAAKQ,YADrB;AAEA,QAAA,YAAY,EAAE,KAAKK,YAFnB;AAGA,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWyB;AAHxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9G0C;;AAiH7C,MAAMU,QAAQ,GAAIZ,KAAD,IAAW;AAC1B,SAAO;AACLjB,IAAAA,OAAO,EAAEiB,KAAK,CAACjB,OADV;AAELmB,IAAAA,WAAW,EAAEF,KAAK,CAACE;AAFd,GAAP;AAID,CALD;;AAOA,MAAMW,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLlC,IAAAA,YAAY,EAAGU,EAAD,IAAQwB,QAAQ,CAACzC,iBAAiB,CAACiB,EAAD,CAAlB,CADzB;AAELc,IAAAA,WAAW,EAAGrB,OAAD,IAAa+B,QAAQ,CAAC1C,gBAAgB,CAACW,OAAD,CAAjB,CAF7B;AAGLyB,IAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACxC,qBAAqB,EAAtB;AAH3B,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CAAC2C,QAAD,EAAWC,WAAX,CAAP,CAA+BtC,oBAA/B,CAAf","sourcesContent":["import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\n\n\nclass EditStudentContainer extends Component {\n  // componentDidMount() {\n    \n  //   this.props.fetchStudent(this.props.match.params.id);\n  //   this.props.fetchAllCampuses();\n  // }\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      firstname: \"\", \n      lastname: \"\", \n      campusId: null,\n      email: \"\",\n      imageUrl: null,\n      gpa: null,\n      redirect: false, \n      redirectId: null,\n      errorMsg: null\n    };\n  }\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchAllCampuses();\n    this.handleInit(this.props.match.params.id);\n  }\n\n  handleInit = async studentId => {\n    await this.props.fetchStudent(studentId);\n    this.setState({\n        firstname: this.props.student.firstname,\n        lastname: this.props.student.lastname, \n        campusId: this.props.student.campusId,\n        email: this.props.student.email,\n        imageUrl: this.props.student.imageUrl,\n        gpa: this.props.student.gpa,\n        redirectId: this.props.student.id\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    let contSubmit = false;\n    let formCampusId = this.state.campusId;\n\n\n    if(!formCampusId) {\n        contSubmit = true;\n        formCampusId = null;\n    }\n\n    if(!contSubmit) {\n        for(let i of this.props.allCampuses) {\n            if(i.id == this.state.campusId) {\n                contSubmit = true;\n                break;\n            }\n        }\n    }\n    if(!contSubmit) {\n        this.setState({\n            errorMsg: \"Invalid Campus ID: Campus does not exist\"\n        });\n    }\n    else {\n        let student = {\n            firstname: this.state.firstname,\n            lastname: this.state.lastname,\n            campusId: formCampusId,\n            email: this.state.email,\n            imageUrl: this.state.imageUrl,\n            gpa: this.state.gpa,\n            id: this.state.redirectId\n        };\n \n      await this.props.editStudent(student);\n\n      this.setState({\n        firstname: '', \n        lastname: '', \n        campusId: '', \n        email: '',\n        imageURL: '',\n        redirect: true\n      });\n    }\n  }\n  render() {\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.props.match.params.id}`}/>)\n    }\n    return (\n      <div>\n        <Header />\n        <EditStudentView student={this.props.student} \n        handleChange = {this.handleChange} \n        handleSubmit={this.handleSubmit}\n        allCampuses={this.props.allCampuses}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    student: state.student,\n    allCampuses: state.allCampuses,  \n  };\n};\n    \nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n    editStudent: (student) => dispatch(editStudentThunk(student)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);    "]},"metadata":{},"sourceType":"module"}