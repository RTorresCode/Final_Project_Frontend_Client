{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { fetchAllStudentsThunk, editStudentThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInit = async campusId => {\n      await this.props.fetchCampus(campusId);\n      this.setState({\n        name: this.props.campus.name,\n        description: this.props.campus.description,\n        address: this.props.campus.address,\n        imageUrl: this.props.campus.imageUrl,\n        students: this.props.campus.students,\n        redirectId: this.props.campus.id\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"changes have been made\");\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address,\n        imageUrl: this.state.imageUrl,\n        id: this.state.redirectId\n      };\n\n      if (this.state.removedStudents) {\n        for (let i of this.state.removedStudents) {\n          const newStudent = i;\n          newStudent.campusId = null;\n          this.props.editStudent(newStudent);\n        }\n      }\n\n      await this.props.editCampus(campus); // Update student in back-end database\n\n      this.setState({\n        // Update state, and trigger redirect to show the edited campus\n        name: '',\n        address: '',\n        imageUrl: '',\n        description: '',\n        redirect: true\n      });\n    };\n\n    this.handleStudentRemove = async (event, studentId) => {\n      event.preventDefault();\n      let currStudents = this.state.students;\n      let removedStudentArr = this.state.removedStudents ? this.state.removedStudents : [];\n      const removedStudent = currStudents.filter(student => student.id === studentId);\n      currStudents = currStudents.filter(student => student.id !== studentId);\n      removedStudentArr.push(removedStudent[0]);\n      this.setState({\n        message: \"Hit the submit button to save campus changes to database\",\n        students: currStudents,\n        removedStudents: removedStudentArr\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      address: \"\",\n      imageUrl: null,\n      students: null,\n      removedStudents: null,\n      message: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    //getting campus ID from url\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  } // Render edit campus input form\n\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campuses/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditCampusView, {\n        campus: this.state,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        handleStudentRemove: this.handleStudentRemove,\n        message: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    campus: state.campus,\n    allStudents: state.allStudents\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    editCampus: campus => dispatch(editCampusThunk(campus)),\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk())\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditCampusContainer.js"],"names":["Header","Component","connect","Redirect","EditCampusView","editCampusThunk","fetchCampusThunk","fetchAllStudentsThunk","editStudentThunk","EditCampusContainer","constructor","props","handleInit","campusId","fetchCampus","setState","name","campus","description","address","imageUrl","students","redirectId","id","handleChange","event","target","value","console","log","handleSubmit","preventDefault","state","removedStudents","i","newStudent","editStudent","editCampus","redirect","handleStudentRemove","studentId","currStudents","removedStudentArr","removedStudent","filter","student","push","message","componentDidMount","match","params","componentWillUnmount","render","mapState","allStudents","mapDispatch","dispatch","fetchAllStudents"],"mappings":"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","sourcesContent":["import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { fetchAllStudentsThunk,editStudentThunk} from \"../../store/thunks\";\n\n\nclass EditCampusContainer extends Component {\n  constructor(props) { \n    super(props); \n    this.state = {\n      name: \"\", \n      description: \"\", \n      address: \"\",\n      imageUrl: null,\n      students: null,\n      removedStudents: null,\n      message: null,\n      redirect: false, \n      redirectId: null\n    }\n  }\n\n  componentDidMount() { //getting campus ID from url\n    this.props.fetchCampus(this.props.match.params.id);\n}\n\nhandleInit = async campusId => {\n  await this.props.fetchCampus(campusId);\n  this.setState({\n      name: this.props.campus.name,\n      description: this.props.campus.description, \n      address: this.props.campus.address,\n      imageUrl: this.props.campus.imageUrl,\n      students: this.props.campus.students,\n      redirectId: this.props.campus.id\n  });\n}\n // Capture input data when it is entered\nhandleChange = event => {\n  this.setState({\n      [event.target.name]: event.target.value\n  });\n  console.log(\"changes have been made\");\n}\n  \n    \nhandleSubmit = async event => {\n  event.preventDefault(); \n\n  let campus = {\n    name: this.state.name,\n    description: this.state.description,\n    address: this.state.address,\n    imageUrl: this.state.imageUrl,\n    id: this.state.redirectId\n  };\n\n  if(this.state.removedStudents) {\n    for(let i of this.state.removedStudents) {\n      const newStudent = i;\n      newStudent.campusId = null;\n      this.props.editStudent(newStudent);\n    }\n  }\n  await this.props.editCampus(campus); // Update student in back-end database\n        this.setState({  // Update state, and trigger redirect to show the edited campus\n          name: '',\n          address: '',\n          imageUrl: '',\n          description: '',\n          redirect: true\n        });      \n    }\n    \n    handleStudentRemove = async (event, studentId) => {\n      event.preventDefault();\n      let currStudents = this.state.students;\n      let removedStudentArr = this.state.removedStudents ? this.state.removedStudents : [];\n      const removedStudent = currStudents.filter(student => student.id === studentId);\n      currStudents = currStudents.filter(student => student.id !== studentId);\n      removedStudentArr.push(removedStudent[0]);\n      this.setState({\n        message: \"Hit the submit button to save campus changes to database\",\n        students: currStudents,\n        removedStudents: removedStudentArr\n      })\n    }\n  \n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n    // Render edit campus input form\n    render() {\n      if(this.state.redirect) {\n        return (<Redirect to={`/campuses/${this.state.redirectId}`}/>)\n    }\n      return (\n        <div>\n          <Header />\n          <EditCampusView campus={this.state}\n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}\n          handleStudentRemove={this.handleStudentRemove}\n          message={this.state.message}\n          />\n        </div>\n      );\n    }\n  }\n  \n  const mapState = (state) => {\n    return {\n      campus: state.campus,\n      allStudents: state.allStudents\n    };\n  };\n  const mapDispatch = (dispatch) => {\n    return {\n      fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n      editCampus: (campus) => dispatch(editCampusThunk(campus)),\n      fetchAllStudents: () => dispatch(fetchAllStudentsThunk())\n    };\n  };\n\n  export default connect(mapState, mapDispatch)(EditCampusContainer);\n       \n\n\n\n\n\n\n        "]},"metadata":{},"sourceType":"module"}