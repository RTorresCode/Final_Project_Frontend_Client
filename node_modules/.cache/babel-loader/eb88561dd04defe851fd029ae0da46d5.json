{"ast":null,"code":"/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\nimport * as ac from './actions/actionCreators'; // Import Action Creators (\"ac\" keyword Action Creator)\n\nconst axios = require('axios'); //All Campuses\n// THUNK CREATOR:\n\n\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`/api/campuses`); // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n\n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Add Campus\n// THUNK CREATOR:\n\nexport const addCampusThunk = campus => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"campus\" object's data to database\n    let res = await axios.post(`/api/campuses`, campus); // Call Action Creator to return Action object (type + payload with new campus's data)\n    // Then dispatch the Action object to Reducer to update state \n\n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}; // Delete Campus\n// THUNK CREATOR:\n\nexport const deleteCampusThunk = campusId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete campus (based on \"campusID\") from database\n    await axios.delete(`/api/campuses/${campusId}`); // Delete successful so change state with dispatch\n\n    dispatch(ac.deleteCampus(campusId));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Single Campus\n// THUNK CREATOR:\n\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Edit Campus\n// THUNK CREATOR:\n\nexport const editCampusThunk = campus => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus); // Update successful so change state with dispatch\n\n    dispatch(ac.editCampus(updatedCampus));\n    return updatedCampus.data;\n  } catch (err) {\n    console.error(err);\n  }\n}; // All Students\n// THUNK CREATOR:\n\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`); // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n\n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Add Student\n// THUNK CREATOR:\n\nexport const addStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student); // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n\n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}; // Delete Student\n// THUNK CREATOR:\n\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`); // Delete successful so change state with dispatch\n\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Single Student\n// THUNK CREATOR:\n\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`); // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n\n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; // Edit Student\n// THUNK CREATOR:\n\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); // Update successful so change state with dispatch\n\n    dispatch(ac.editStudent(updatedStudent));\n    return updatedStudent.data;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","require","fetchAllCampusesThunk","dispatch","res","get","fetchAllCampuses","data","err","console","error","addCampusThunk","campus","post","addCampus","deleteCampusThunk","campusId","delete","deleteCampus","fetchCampusThunk","id","fetchCampus","editCampusThunk","updatedCampus","put","editCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","addStudent","deleteStudentThunk","studentId","deleteStudent","fetchStudentThunk","fetchStudent","editStudentThunk","updatedStudent","editStudent"],"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/store/thunks.js"],"sourcesContent":["/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\r\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\r\nconst axios = require('axios');\r\n\r\n//All Campuses\r\n// THUNK CREATOR:\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\r\n    try {\r\n        // API \"get\" call to get \"campuses\" data from database\r\n        let res = await axios.get(`/api/campuses`);\r\n        // Call Action Creator to return Action object (type + payload with \"campuses\" data)\r\n        // Then dispatch the Action object to Reducer to update state \r\n        dispatch(ac.fetchAllCampuses(res.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Add Campus\r\n// THUNK CREATOR:\r\nexport const addCampusThunk = (campus) => async (dispatch) => {  // The THUNK\r\n    try {\r\n        // API \"post\" call to add \"campus\" object's data to database\r\n        let res = await axios.post(`/api/campuses`, campus);\r\n        // Call Action Creator to return Action object (type + payload with new campus's data)\r\n        // Then dispatch the Action object to Reducer to update state \r\n        dispatch(ac.addCampus(res.data));\r\n        return res.data;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Delete Campus\r\n// THUNK CREATOR:\r\nexport const deleteCampusThunk = campusId => async dispatch => {  // The THUNK\r\n    try {\r\n        // API \"delete\" call to delete campus (based on \"campusID\") from database\r\n        await axios.delete(`/api/campuses/${campusId}`);\r\n        // Delete successful so change state with dispatch\r\n        dispatch(ac.deleteCampus(campusId));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Single Campus\r\n// THUNK CREATOR:\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\r\n    try {\r\n        // API \"get\" call to get a student data (based on \"id\")from database\r\n        let res = await axios.get(`/api/campuses/${id}`);\r\n        dispatch(ac.fetchCampus(res.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Edit Campus\r\n// THUNK CREATOR:\r\nexport const editCampusThunk = campus => async dispatch => {  // The THUNK\r\n    try {\r\n        // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n        let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus);\r\n        // Update successful so change state with dispatch\r\n        dispatch(ac.editCampus(updatedCampus));\r\n        return updatedCampus.data;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// All Students\r\n// THUNK CREATOR:\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\r\n    try {\r\n        // API \"get\" call to get \"students\" data from database\r\n        let res = await axios.get(`/api/students`);\r\n        // Call Action Creator to return Action object (type + payload with \"students\" data)\r\n        // Then dispatch the Action object to Reducer to update state \r\n        dispatch(ac.fetchAllStudents(res.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Add Student\r\n// THUNK CREATOR:\r\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\r\n    try {\r\n        // API \"post\" call to add \"student\" object's data to database\r\n        let res = await axios.post(`/api/students`, student);\r\n        // Call Action Creator to return Action object (type + payload with new students data)\r\n        // Then dispatch the Action object to Reducer to update state \r\n        dispatch(ac.addStudent(res.data));\r\n        return res.data;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Delete Student\r\n// THUNK CREATOR:\r\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\r\n    try {\r\n        // API \"delete\" call to delete student (based on \"studentID\") from database\r\n        await axios.delete(`/api/students/${studentId}`);\r\n        // Delete successful so change state with dispatch\r\n        dispatch(ac.deleteStudent(studentId));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Single Student\r\n// THUNK CREATOR:\r\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\r\n    try {\r\n        // API \"get\" call to get a specific student (based on \"id\") data from database\r\n        let res = await axios.get(`/api/students/${id}`);\r\n        // Call Action Creator to return Action object (type + payload with student data)\r\n        // Then dispatch the Action object to Reducer to display student data \r\n        dispatch(ac.fetchStudent(res.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Edit Student\r\n// THUNK CREATOR:\r\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\r\n    try {\r\n        // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n        let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\r\n        // Update successful so change state with dispatch\r\n        dispatch(ac.editStudent(updatedStudent));\r\n        return updatedStudent.data;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}