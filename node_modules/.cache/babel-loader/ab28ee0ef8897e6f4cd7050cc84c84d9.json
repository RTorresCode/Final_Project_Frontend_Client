{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = event.target;\n      this.setState({\n        [event.target.name]: event.target.value\n      }, () => {\n        this.validateGPA();\n      });\n      console.log(this.state);\n    };\n\n    this.validateGPA = () => {\n      const {\n        gpa\n      } = this.state;\n      this.setState({\n        gpaError: gpa <= 4 ? null : 'GPA Must be less Than or equal to 4.0'\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        email: this.state.email,\n        gpa: this.state.gpa,\n        id: this.props.student.id\n      };\n      console.log(this.state.campusId);\n      console.log(\"student: \");\n      console.log(student);\n      console.log(\"this.props.student: \");\n      console.log(this.props.student);\n\n      if (student.campusId === \"\") {\n        student.campusId = null;\n      }\n\n      let newStudent = await this.props.editStudent(student);\n      console.log(\"newStudent: \");\n      console.log(newStudent);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: 0,\n        campusId: null,\n        redirect: true,\n        redirectId: newStudent.id\n      });\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      gpa: -1,\n      email: \"\",\n      imageUrl: \"\",\n      id: -1,\n      campusId: -1,\n      redirect: false,\n      errorCaught: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      firstname: this.props.student.firstname,\n      lastname: this.props.student.lastname,\n      gpa: this.props.student.gpa,\n      email: this.props.student.email,\n      imageUrl: this.props.student.imageUrl,\n      campusId: this.props.student.campusId,\n      id: this.props.student.id\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      student: this.props.student,\n      editStudent: this.props.editStudent,\n      deleteStudent: this.props.deleteStudent,\n      fetchStudent: this.props.fetchStudent,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/EditStudentContainer.js"],"names":["Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","EditStudentContainer","constructor","props","handleChange","event","name","value","type","checked","target","setState","validateGPA","console","log","state","gpa","gpaError","handleSubmit","preventDefault","student","firstname","lastname","campusId","email","id","newStudent","editStudent","redirect","redirectId","imageUrl","errorCaught","componentDidMount","componentWillUnmount","render","deleteStudent","fetchStudent","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\n\n\nclass EditStudentContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          firstname: \"\", \n          lastname: \"\",\n          gpa: -1,\n          email: \"\",\n          imageUrl: \"\",\n          id: -1,\n          campusId: -1, \n          redirect: false, \n          errorCaught: false, \n          redirectId: null\n        };\n    }\n\n    componentDidMount() {\n      this.setState({firstname: this.props.student.firstname,\n          lastname: this.props.student.lastname, \n          gpa: this.props.student.gpa,\n          email: this.props.student.email,\n          imageUrl: this.props.student.imageUrl,\n          campusId: this.props.student.campusId,\n          id: this.props.student.id});  \n    }\n\n    handleChange = event => {\n      const {name, value, type, checked} = event.target\n      this.setState({\n        [event.target.name]: event.target.value},() => {\n          this.validateGPA();\n      });\n        console.log(this.state);\n    }\n  //Checking the GPA and console logging the error if invalid\n      validateGPA = () => {\n        const { gpa } = this.state;\n        this.setState({\n          gpaError:\n            gpa <= 4 ? null : 'GPA Must be less Than or equal to 4.0'\n        });\n      }\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let student = {\n            firstname: this.state.firstname,\n            lastname: this.state.lastname,\n            campusId: this.state.campusId,\n            email: this.state.email,\n            gpa: this.state.gpa,\n            id: this.props.student.id\n        };\n        console.log(this.state.campusId)\n        console.log(\"student: \")\n        console.log(student)\n\n        console.log(\"this.props.student: \")\n        console.log(this.props.student)\n\n        if (student.campusId === \"\") {\n          student.campusId = null;\n        }\n\n        let newStudent = await this.props.editStudent(student);\n\n        console.log(\"newStudent: \")\n        console.log(newStudent)\n\n        this.setState({\n          firstname: \"\", \n          lastname: \"\", \n          email: \"\",\n          gpa: 0,\n          campusId: null, \n          redirect: true, \n            redirectId: newStudent.id\n        });\n    }\n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n\n    render() {\n        if(this.state.redirect) {\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\n        }\n        return (\n            <EditStudentView \n            student={this.props.student}\n            editStudent={this.props.editStudent}\n            deleteStudent={this.props.deleteStudent}\n            fetchStudent={this.props.fetchStudent}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n    }\n}\n\nconst mapState = (state) => {\n    return {\n      student: state.student,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n        editStudent: (student) => dispatch(editStudentThunk(student))\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"]},"metadata":{},"sourceType":"module"}