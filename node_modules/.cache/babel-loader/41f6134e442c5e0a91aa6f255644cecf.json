{"ast":null,"code":"var _jsxFileName = \"/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/CampusContainer.js\";\n\n/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCampusThunk, deleteCampusThunk //deleteStudentThunk,\n} from \"../../store/thunks\";\nimport { CampusView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CampusContainer extends Component {\n  constructor(props) {\n    //initialize state\n    super(props);\n    this.state = {\n      studRedirect: false\n    };\n  } // Get the specific campus data from back-end database\n\n\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id); //this.props.fetchAllStudents(); \n  } // Render a Campus view by passing campus data as props to the corresponding View component\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CampusView, {\n        campus: this.props.campus,\n        deleteCampus: this.props.deleteCampus,\n        toggleEdit: this.toggleEdit,\n        editing: this.state.editor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\n\n\nconst mapState = state => {\n  return {\n    campus: state.campus // Get the State object from Reducer \"campus\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    deleteCampus: id => dispatch(deleteCampusThunk(id))\n  };\n}; // Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default connect(mapState, mapDispatch)(CampusContainer);","map":{"version":3,"sources":["/Users/tahminamunni/Desktop/Final_Project_Frontend_Client/src/components/containers/CampusContainer.js"],"names":["Header","Redirect","React","Component","connect","fetchCampusThunk","deleteCampusThunk","CampusView","CampusContainer","constructor","props","state","studRedirect","componentDidMount","fetchCampus","match","params","id","render","campus","deleteCampus","toggleEdit","editor","mapState","mapDispatch","dispatch"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EACSC,iBADT,CAES;AAFT,OAGe,oBAHf;AAKA,SAASC,UAAT,QAA2B,UAA3B;;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGD,GANqC,CAOtC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKH,KAAL,CAAWI,WAAX,CAAuB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EAFkB,CAGlB;AACD,GAZqC,CAetC;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACA,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MADnB;AAEA,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,YAFzB;AAGA,QAAA,UAAU,EAAE,KAAKC,UAHjB;AAIA,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW;AAJpB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7BqC,C,CAgCxC;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAIZ,KAAD,IAAW;AAC1B,SAAO;AACLQ,IAAAA,MAAM,EAAER,KAAK,CAACQ,MADT,CACkB;;AADlB,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAMK,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLX,IAAAA,WAAW,EAAGG,EAAD,IAAQQ,QAAQ,CAACpB,gBAAgB,CAACY,EAAD,CAAjB,CADxB;AAELG,IAAAA,YAAY,EAAGH,EAAD,IAAQQ,QAAQ,CAACnB,iBAAiB,CAACW,EAAD,CAAlB;AAFzB,GAAP;AAID,CALD,C,CAOA;AACA;AACA;;;AACA,eAAeb,OAAO,CAACmB,QAAD,EAAWC,WAAX,CAAP,CAA+BhB,eAA/B,CAAf","sourcesContent":["/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Redirect } from 'react-router-dom'\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCampusThunk,\n         deleteCampusThunk,\n         //deleteStudentThunk,\n        } from \"../../store/thunks\";\n\nimport { CampusView } from \"../views\";\n\nclass CampusContainer extends Component {\n  constructor(props) { //initialize state\n    super(props); \n    this.state = {\n        studRedirect: false,\n    }\n  }\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n    //this.props.fetchAllStudents(); \n  }\n\n  \n  // Render a Campus view by passing campus data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <CampusView \n        campus={this.props.campus} \n        deleteCampus={this.props.deleteCampus}\n        toggleEdit={this.toggleEdit}\n        editing={this.state.editor} \n      \n        />\n      </div>\n    );\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nconst mapState = (state) => {\n  return {\n    campus: state.campus,  // Get the State object from Reducer \"campus\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n    deleteCampus: (id) => dispatch(deleteCampusThunk(id)),\n  };\n};\n\n// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(CampusContainer);"]},"metadata":{},"sourceType":"module"}