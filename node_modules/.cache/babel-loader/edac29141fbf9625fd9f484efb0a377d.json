{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RT3\\\\Documents\\\\Projects\\\\Web Development\\\\Final Project (Frontend)\\\\src\\\\components\\\\views\\\\CampusView.js\";\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus\n  } = props; // If there are no students, display a message.\n\n  if (!props.campus.students.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: campus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"There are no students at this campus.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } else {\n    // Render a single Campus view with list of its students\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: campus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/student/${student.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/components/views/CampusView.js"],"names":["Link","CampusView","props","campus","students","length","name","address","description","map","student","firstname","lastname","id"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CAD0B,CAG1B;;AACA,MAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC,MAA3B,EAAmC;AAC/B,wBACI;AAAA,8BACI;AAAA,kBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIH,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIJ,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWO;AAEL;AACA,wBACE;AAAA,8BACE;AAAA,kBAAKL,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIH,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIJ,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cAHF,EAKGL,MAAM,CAACC,QAAP,CAAgBK,GAAhB,CAAqBC,OAAO,IAAI;AAC/B,YAAIJ,IAAI,GAAGI,OAAO,CAACC,SAAR,GAAoB,GAApB,GAA0BD,OAAO,CAACE,QAA7C;AACA,4BACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWF,OAAO,CAACG,EAAG,EAAjC;AAAA,mCACE;AAAA,wBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUI,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;AAEJ,CAtCD;;KAAMZ,U;AAwCN,eAAeA,UAAf","sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n    const { campus } = props;\n\n    // If there are no students, display a message.\n    if (!props.campus.students.length) {\n        return (\n            <div>\n                <h1>{campus.name}</h1>\n                <p>{campus.address}</p>\n                <p>{campus.description}</p>\n                <br />\n                <h3>There are no students at this campus.</h3>\n            </div>\n        );\n\n    } else {\n\r\n      // Render a single Campus view with list of its students\n      return (\n        <div>\n          <h1>{campus.name}</h1>\n          <p>{campus.address}</p>\n          <p>{campus.description}</p>\n\n          {campus.students.map( student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return (\n              <div key={student.id}>\n                <Link to={`/student/${student.id}`}>\n                  <h2>{name}</h2>\n                </Link>             \n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  \n};\n\nexport default CampusView;"]},"metadata":{},"sourceType":"module"}