{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RT3\\\\Documents\\\\Projects\\\\Web Development\\\\Final Project (Frontend)\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk } from '../../store/thunks';\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  // componentDidMount() {\n  //   this.props.fetchStudent(this.props.match.params.id);\n  //   this.props.fetchAllCampuses();\n  // }\n  constructor(props) {\n    super(props);\n\n    this.handleInit = async studentId => {\n      await this.props.fetchStudent(studentId);\n      this.setState({\n        firstname: this.props.student.firstname,\n        lastname: this.props.student.lastname,\n        campusId: this.props.student.campusId,\n        email: this.props.student.email,\n        imageUrl: this.props.student.imageUrl,\n        gpa: this.props.student.gpa,\n        redirectId: this.props.student.id\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let contSubmit = false;\n      let formCampusId = this.state.campusId;\n\n      if (!formCampusId) {\n        contSubmit = true;\n        formCampusId = null;\n      }\n\n      if (!contSubmit) {\n        for (let i of this.props.allCampuses) {\n          if (i.id === this.state.campusId) {\n            contSubmit = true;\n            break;\n          }\n        }\n      }\n\n      if (!contSubmit) {\n        this.setState({\n          errorMsg: \"Invalid Campus ID!\"\n        });\n      } else {\n        let student = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          campusId: formCampusId,\n          email: this.state.email,\n          imageUrl: this.state.imageUrl,\n          gpa: this.state.gpa,\n          id: this.state.redirectId\n        }; // Update student in back-end database\n\n        await this.props.editStudent(student); // Update state, and trigger redirect to updated student\n\n        this.setState({\n          firstname: '',\n          lastname: '',\n          campusId: null,\n          email: '',\n          redirect: true\n        });\n      }\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      campusId: null,\n      email: \"\",\n      imageUrl: null,\n      gpa: null,\n      redirect: false,\n      redirectId: null,\n      errorMsg: null\n    };\n  }\n\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchAllCampuses();\n    this.handleInit(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/students/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.state,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        errorMsg: this.state.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student,\n    allCampuses: state.allCampuses\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student)),\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk())\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","fetchAllCampusesThunk","EditStudentContainer","constructor","props","handleInit","studentId","fetchStudent","setState","firstname","student","lastname","campusId","email","imageUrl","gpa","redirectId","id","handleChange","event","target","name","value","handleSubmit","preventDefault","contSubmit","formCampusId","state","i","allCampuses","errorMsg","editStudent","redirect","componentDidMount","fetchAllCampuses","match","params","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"sources":["C:/Users/RT3/Documents/Projects/Web Development/Final Project (Frontend)/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk } from '../../store/thunks';\r\nimport { fetchStudentThunk } from \"../../store/thunks\";\r\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\r\n\r\n\r\nclass EditStudentContainer extends Component {\r\n    // componentDidMount() {\r\n\r\n    //   this.props.fetchStudent(this.props.match.params.id);\r\n    //   this.props.fetchAllCampuses();\r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            campusId: null,\r\n            email: \"\",\r\n            imageUrl: null,\r\n            gpa: null,\r\n            redirect: false,\r\n            redirectId: null,\r\n            errorMsg: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //getting student ID from url\r\n        this.props.fetchAllCampuses();\r\n        this.handleInit(this.props.match.params.id);\r\n    }\r\n\r\n    handleInit = async studentId => {\r\n        await this.props.fetchStudent(studentId);\r\n        this.setState({\r\n            firstname: this.props.student.firstname,\r\n            lastname: this.props.student.lastname,\r\n            campusId: this.props.student.campusId,\r\n            email: this.props.student.email,\r\n            imageUrl: this.props.student.imageUrl,\r\n            gpa: this.props.student.gpa,\r\n            redirectId: this.props.student.id\r\n        });\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        let contSubmit = false;\r\n        let formCampusId = this.state.campusId;\r\n\r\n\r\n        if (!formCampusId) {\r\n            contSubmit = true;\r\n            formCampusId = null;\r\n        }\r\n\r\n        if (!contSubmit) {\r\n            for (let i of this.props.allCampuses) {\r\n                if (i.id === this.state.campusId) {\r\n                    contSubmit = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!contSubmit) {\r\n            this.setState({\r\n                errorMsg: \"Invalid Campus ID!\"\r\n            });\r\n        }\r\n        else {\r\n            let student = {\r\n                firstname: this.state.firstname,\r\n                lastname: this.state.lastname,\r\n                campusId: formCampusId,\r\n                email: this.state.email,\r\n                imageUrl: this.state.imageUrl,\r\n                gpa: this.state.gpa,\r\n                id: this.state.redirectId\r\n            };\r\n\r\n            // Update student in back-end database\r\n            await this.props.editStudent(student);\r\n            // Update state, and trigger redirect to updated student\r\n            this.setState({\r\n                firstname: '',\r\n                lastname: '',\r\n                campusId: null,\r\n                email: '',\r\n                redirect: true\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ redirect: false, redirectId: null });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return (<Redirect to={`/students/${this.state.redirectId}`} />)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <EditStudentView student={this.state}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    errorMsg={this.state.errorMsg}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        student: state.student,\r\n        allCampuses: state.allCampuses,\r\n    };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n        fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\r\n    };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}